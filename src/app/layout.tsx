import "~/styles/globals.css";

import { Inter } from "next/font/google";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`font-sans ${inter.variable}`}>{children}</body>
    </html>
  );
}

/* 
CREATE TABLE IF NOT EXISTS public.categories
(
    id integer NOT NULL DEFAULT nextval('categories_id_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    priority integer NOT NULL DEFAULT nextval('categories_priority_seq'::regclass),
    CONSTRAINT "categories_pkey" PRIMARY KEY (id)
);
CREATE UNIQUE INDEX IF NOT EXISTS categories_priority_ukey
    ON public.categories USING btree
    (priority ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.images
(
    id integer NOT NULL DEFAULT nextval('images_id_seq'::regclass),
    url text COLLATE pg_catalog."default" NOT NULL,
    blur_data_url text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    size_mb double precision NOT NULL,
    color text COLLATE pg_catalog."default",
    products_id integer,
    CONSTRAINT images_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."products"
(
    id integer NOT NULL DEFAULT nextval('products_id_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    primary_images_id integer NOT NULL,
    price double precision NOT NULL,
    currency text COLLATE pg_catalog."default" NOT NULL DEFAULT 'CUP'::text,
    priority integer NOT NULL DEFAULT nextval('products_priority_seq'::regclass),
    active boolean NOT NULL DEFAULT true,
    deleted boolean NOT NULL DEFAULT false,
    stock integer NOT NULL,
    categories_id integer NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (id),
    CONSTRAINT products_categories_id_fkey FOREIGN KEY (categories_id)
        REFERENCES public.categories (id) MATCH SIMPLE
        ON UPDATE RESTRICT
        ON DELETE RESTRICT,
    CONSTRAINT products_primary_images_id_fkey FOREIGN KEY (primary_images_id)
        REFERENCES public.images (id) MATCH SIMPLE
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS products_primary_images_id_ukey
    ON public.products USING btree
    (primary_images_id ASC NULLS LAST)
    TABLESPACE pg_default;
CREATE UNIQUE INDEX IF NOT EXISTS products_priority_ukey
    ON public.products USING btree
    (priority ASC NULLS LAST)
    TABLESPACE pg_default;
    

CREATE SEQUENCE IF NOT EXISTS public.categories_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY categories.id;

CREATE SEQUENCE IF NOT EXISTS public.categories_priority_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY categories.priority;
  
CREATE SEQUENCE IF NOT EXISTS public.images_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY images.id;

    CREATE SEQUENCE IF NOT EXISTS public.products_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY products.id;

    CREATE SEQUENCE IF NOT EXISTS public.products_priority_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY products.priority;



*/
